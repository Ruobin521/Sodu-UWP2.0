using System;
using GalaSoft.MvvmLight;
using System.Collections.ObjectModel;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Threading.Tasks;
using System.Windows.Input;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.Web.Http;
using Windows.Web.Http.Filters;
using GalaSoft.MvvmLight.Command;
using Sodu.Core.Entity;
using Sodu.Core.HtmlService;
using Sodu.Service;
using Sodu.View;

namespace Sodu.ViewModel
{
    public class MainViewModel : ViewModelBase
    {

        #region 属性

        public Frame ContentFrame { get; set; }

        private bool _hasShow = false;

        /// <summary>
        /// 是否登陆
        /// </summary>

        private bool _isLogin;
        public bool IsLogin
        {
            get
            {
                return _isLogin;
            }
            set
            {
                Set(ref _isLogin, value);
                LoginButtonLength = IsLogin ? new GridLength(1, GridUnitType.Star) : new GridLength(0);
            }
        }


        private GridLength _loginButtonLength = new GridLength(0);
        public GridLength LoginButtonLength
        {
            get
            {
                return _loginButtonLength;
            }
            set
            {
                Set(ref _loginButtonLength, value);
            }
        }

        private ObservableCollection<TabbarItem> _tabbarItemList;

        public ObservableCollection<TabbarItem> TabbarItemList
        {
            get
            {
                return _tabbarItemList;
            }
            set { Set(ref _tabbarItemList, value); }
        }


        private int CurrentIndex { get; set; } = -1;


        private UIElement _currentContent;
        /// <summary>
        /// 当前内容
        /// </summary>
        public UIElement CurrentContent
        {
            get { return _currentContent; }
            set { Set(ref _currentContent, value); }
        }
        #endregion

        #region 命令

        private ICommand _tabSwitchCommand;
        public ICommand TabSwitchCommand
        {
            get
            {
                return _tabSwitchCommand ?? (
                 _tabSwitchCommand = new RelayCommand<object>(
                      (obj) =>
                      {
                          var index = (int)obj;
                          SwitchTab(index);
                      }));
            }
        }

        #endregion

        #region 构造函数/方法

        public MainViewModel()
        {
            IsLogin = CookieHelper.CheckLogin();
            InitTabbar();
        }

        private void InitTabbar()
        {
            _tabbarItemList = new ObservableCollection<TabbarItem>();

            _tabbarItemList.Add(new TabbarItem()
            {
                Index = 0,
                Title = "在线书架",
                PathData = "M902 857.3h-95.3V216c0-28.7-23.3-52-52-52h-104c-28.7 0-52 23.3-52 52v156h-104V216c0-28.7-23.3-52-52-52H269.3c-28.7 0-52 23.3-52 52v641.3H122c-9.6 0-17.3 7.8-17.3 17.3S112.4 892 122 892h780c9.6 0 17.3-7.8 17.3-17.3s-7.7-17.4-17.3-17.4zM633.3 354.7H772V684H633.3V354.7z m0-138.7c0-9.6 7.8-17.3 17.3-17.3h104c9.6 0 17.3 7.8 17.3 17.3v104H633.3V216z m-34.6 190.7v450.7h-104V406.7h104zM252 857.3V216c0-9.6 7.8-17.3 17.3-17.3h173.3c9.6 0 17.3 7.8 17.3 17.3v641.3H252z m381.3 0V718.7H772v138.7H633.3z",
                ContentElement = new OnlineBookShelfPage()
            });

            _tabbarItemList.Add(new TabbarItem()
            {
                Index = 1,
                PathData = "M912.606624 601.309413c0 20.94798-9.082991 37.799963-27.024974 50.064951-15.359985 10.70799-33.635967 16.161984-54.204947 16.161984-18.809982 0-35.416965-4.763995-49.396952-14.202986-16.472984-11.018989-24.842976-26.267974-24.842975-45.322956 0-13.956986 7.389993-21.926979 20.25698-21.926978 7.523993 0 13.066987 6.099994 16.539984 18.164982 4.540996 17.207983 16.427984 25.176975 37.442963 25.176975a55.874945 55.874945 0 0 0 28.449972-7.412992c8.991991-5.364995 13.199987-11.953988 13.199987-20.70198 0-10.68599-3.850996-18.832982-11.731988-24.999976-4.807995-3.716996-16.116984-8.169992-42.606958-8.169992-20.87998 0-23.128977-13.332987-23.128978-19.053981 0-6.522994 2.937997-17.585983 22.749978-18.743982 16.406984-1.023999 28.293972-2.804997 35.283965-5.342995 14.892985-5.208995 16.606984-14.223986 16.606984-20.52398 0-4.496996-1.269999-11.085989-12.154988-16.316984-7.256993-3.383997-16.049984-5.097995-26.022975-5.097995-16.271984 0-26.199974 6.877993-31.209969 21.659979-3.827996 10.63999-9.459991 15.937984-16.716984 15.937985-12.710988 0-20.30198-7.723992-20.30198-20.63498 0-16.918983 7.946992-30.87597 23.551977-41.49496a78.691923 78.691923 0 0 1 44.676956-13.555987c20.23498 0 37.642963 4.406996 51.73495 13.088988 17.295983 11.085989 26.021975 27.001974 26.021975 47.370953 0 18.053982-8.903991 32.522968-26.467975 43.141958 19.455981 11.374989 29.295971 29.049972 29.295972 52.735949z m34.637966 266.551739H754.309778a22.994978 22.994978 0 0 1-22.884977-23.150977c0-12.821987 10.21799-23.173977 22.884977-23.173977h192.934812c17.073983 0 30.98697-14.067986 30.98697-31.34297l0.555999-357.152651c0-17.096983-13.756987-31.03197-30.62997-31.03197H757.491775c-12.487988 0-26.067975-19.389981-26.067974-32.010968s13.579987-13.801987 26.067974-13.801987h190.663814c41.827959 0 75.842926 34.459966 75.842926 76.844925v357.152651c0 42.829958-34.437966 77.667924-76.754925 77.667924z m-338.765669 0H415.520109c-42.317959 0-76.732925-34.837966-76.732925-77.667924l-4.874995-712.592304C333.913189 34.815966 369.308154 0 412.806112 0h198.387806c43.497958 0 78.892923 34.815966 78.892923 77.600924l-4.852995 712.592304c0 42.829958-34.436966 77.667924-76.754925 77.667924z m2.714997-821.581197H412.806112c-17.541983 0-31.855969 14.069986-31.855969 31.320969l3.583996 712.592304c0 17.274983 13.912986 31.342969 30.98697 31.34297H608.479921c17.073983 0 30.98697-14.067986 30.98697-31.34297l3.583996-712.592304c0-17.251983-14.313986-31.319969-31.855969-31.319969z m-77.578924 287.476719c-13.622987 0-21.725979-7.768992-21.725979-20.79098V167.779836c-26.534974 10.885989-44.321957 3.339997-44.321957-13.823986 0-4.985995 2.515998-13.823987 19.299982-17.073984 2.292998-0.555999 4.607996-1.089999 6.923993-1.579998 5.430995-1.291999 12.042988-5.520995 19.410981-12.421988 11.886988-11.019989 16.606984-11.641989 21.058979-11.641989 14.469986 0 22.193978 5.964994 22.193979 18.386982v183.339821c0 13.022987-8.525992 20.79198-22.839978 20.79198zM292.552229 844.710175c0 12.799988-10.21699 23.150977-22.883977 23.150977H76.75544C34.438481 867.861152 0.000515 833.023187 0.000515 790.193228V276.16773a76.087926 76.087926 0 0 1 75.842926-76.153925h190.619814c12.509988 0 22.616978 10.14999 22.616978 22.705978 0 12.554988-10.10699 22.705978-22.616978 22.705977H75.843441a30.71997 30.71997 0 0 0-30.63097 30.74197l0.555999 514.025498c0 17.274983 13.912986 31.342969 30.98697 31.34297h192.912812c12.643988 0 22.883978 10.37399 22.883977 23.173977z m-47.993953-329.705678c0 12.154988-8.191992 19.411981-21.882978 19.411981H113.263404c-22.126978 0-24.530976-14.024986-24.530976-20.07998 0-7.701992 5.631995-17.963982 18.275982-33.167968 8.681992-10.17399 20.59098-21.971979 35.416966-35.171966a7299.109872 7299.109872 0 0 1 37.086964-32.479968c15.159985-13.466987 22.905978-26.199974 22.905977-37.775963 0-8.324992-3.227997-14.579986-9.83999-19.121981-6.187994-4.117996-14.379986-6.232994-24.285976-6.232994-10.06199 0-18.409982 2.804997-25.488975 8.525992-7.167993 5.586995-11.596989 12.999987-13.711987 22.772977-2.915997 13.689987-8.815991 20.63598-17.474983 20.63598-12.888987 0-20.59098-7.879992-20.59098-21.059979 0-17.851983 7.434993-33.990967 22.081979-48.015953 14.781986-14.179986 33.346967-21.391979 55.184946-21.39198 20.41298 0 37.776963 5.274995 51.622949 15.648985 15.693985 11.664989 23.662977 27.892973 23.662977 48.239953 0 20.99098-12.264988 42.160959-36.439964 62.885939a2215.221837 2215.221837 0 0 0-37.175964 32.656968c-9.082991 8.436992-17.073983 16.672984-23.907977 24.619976h76.620926c13.689987 0 21.882979 7.123993 21.882978 19.099981zM23.864492 979.166044h976.071047c13.155987 0 23.863977 10.03999 23.863976 22.393978 0 12.376988-10.70799 22.438978-23.863976 22.438978H23.864492C10.707505 1023.999 0.000515 1013.93701 0.000515 1001.560022c0-12.354988 10.70699-22.393978 23.863977-22.393978z",
                Title = "排行榜",
                ContentElement = new RankPage()

            });

            _tabbarItemList.Add(new TabbarItem()
            {
                Index = 2,
                PathData = "M890.05557 543.793627c-44.169482-106.755749-49.50442-196.2927-32.663618-266.22388 1.74898-7.259915 3.595958-13.549841 5.462936-18.997777 0.904989-2.639969 3.047964-8.234903 3.304962-9.107893l14.725827-49.914415-47.826439 20.516759c-0.955989 0.409995-2.444971 1.035988-5.635934 2.379972a316.056296 316.056296 0 0 0-7.557912 3.305961c-6.577923 2.986965-12.81985 6.153928-19.170775 9.831885-16.607805 9.616887-32.211623 21.755745-46.834451 37.379562-26.232693 28.024672-47.335445 65.266235-62.080273 113.318672-16.739804 54.555361-20.265763 98.251849-18.77678 161.771104 0.472994 20.204763 0.458995 25.741698-0.164998 29.615653 0.939989-5.831932 11.615864-15.35382 23.264728-10.871872-3.047964-1.171986-10.409878-9.816885-19.790769-32.171623-15.762815-37.56056-29.479655-98.800842-39.496537-187.979797-11.370867-101.237814-6.712921-185.375828 7.829909-251.986047 3.029964-13.881837 6.252927-25.742698 9.439889-35.565584 1.827979-5.632934 3.167963-9.189892 3.792955-10.649875L678.643047 0l-50.400409 15.421819c-10.833873 3.314961-28.297668 11.05587-50.138413 24.73271-35.556583 22.266739-70.904169 53.459374-103.703784 95.006887-26.802686 33.953602-50.788405 73.535138-71.280165 119.133604-24.210716 53.872369-40.11553 98.901841-49.960415 138.462377-3.883954 15.604817-6.724921 29.913649-8.963895 44.312481a624.352683 624.352683 0 0 0-2.389972 17.012801c-0.300996 2.357972-1.446983 11.581864-1.729979 13.765838-2.477971 19.112776-4.22595 23.792721-10.838873 29.832651 6.84692-6.253927 13.997836-5.784932 17.372796-3.773956-1.755979-1.045988-5.009941-4.406948-8.615899-9.799885-10.960872-16.391808-20.011765-42.995496-24.300715-77.452092-2.439971-19.60177-3.486959-49.745417-3.320961-87.203979 0.109999-24.876708 0.742991-51.576396 1.72998-78.43208 0.380996-10.414878 0.790991-20.126764 1.199985-28.870662 0.244997-5.229939 0.434995-8.963895 0.541994-10.933872l3.712957-68.395198-46.193459 50.574407c-0.89299 0.976989-2.507971 2.766968-4.741944 5.277938-3.690957 4.146951-7.794909 8.831897-12.210857 13.964836-12.619852 14.666828-25.243704 30.019648-37.066566 45.356469a755.801143 755.801143 0 0 0-15.889814 21.33975c-25.433702 35.516584-44.833475 71.260165-63.327258 114.507658-47.280446 110.558704-61.145283 212.50351-38.860544 324.016203 27.545677 137.839385 89.289954 225.777354 179.565895 272.821803 65.360234 34.061601 130.005476 43.309492 229.107316 43.309492 17.772792 0 50.036414-2.432971 82.916028-7.537912 50.294411-7.808908 96.638868-20.672758 135.204415-39.870532 12.092858-6.019929 17.015801-20.701757 10.995872-32.794616-6.019929-12.091858-20.701757-17.015801-32.793616-10.995871-33.409608 16.629805-75.171119 28.222669-120.911583 35.324586-30.367644 4.714945-60.123295 6.957918-75.410116 6.957918-91.777924 0-150.005242-8.329902-206.50258-37.771557-76.605102-39.921532-129.456483-115.19365-154.204193-239.029199-20.232763-101.243814-7.71491-193.281735 35.869579-295.196541 17.182799-40.180529 34.919591-72.862146 58.121319-105.261766a707.242712 707.242712 0 0 1 14.859826-19.953766c11.236868-14.575829 23.319727-29.270657 35.406585-43.319493 7.242915-8.417901 12.849849-14.718828 15.989813-18.155787l-42.481502-17.820791c-0.112999 2.087976-0.308996 5.94093-0.559994 11.297868-0.416995 8.901896-0.83299 18.77778-1.221986 29.363656-1.003988 27.34268-1.647981 54.548361-1.760979 80.009062-0.174998 39.403538 0.930989 71.268165 3.694957 93.465905 10.909872 87.626973 57.477326 157.270157 97.075862 121.098581 17.115799-15.633817 22.529736-30.132647 26.357691-59.660301 9.34889-72.117155 18.74878-109.888712 59.152307-199.790659 18.849779-41.944508 40.746523-78.080085 65.057238-108.875724 29.239657-37.038566 60.360293-64.501244 91.27193-83.859017 10.628875-6.655922 20.403761-11.813862 29.05666-15.649817 4.897943-2.169975 8.133905-3.367961 9.430889-3.764956L612.918817 29.173658c-4.26095 9.941883-10.23288 28.346668-16.063811 55.052355-15.669816 71.769159-20.623758 161.27211-8.649899 267.879861 19.089776 169.946008 50.612407 245.061128 90.329941 260.344949 22.764733 8.759897 39.194541-5.893931 42.595501-26.998684 1.342984-8.329902 1.355984-13.721839 0.774991-38.543548-1.374984-58.706312 1.782979-97.865853 16.637805-146.277286 12.605852-41.079519 29.997648-71.771159 51.029402-94.240896 19.65477-20.997754 32.149623-28.233669 62.771265-41.369515l-9.642887-22.477736-23.457726-6.919919c2.988965-10.131881-5.796932 15.499818-9.407889 30.493642-19.190775 79.690066-13.227845 179.764893 35.019589 296.378527 38.246552 92.440917 29.728652 207.430569-20.855755 272.096812-8.322902 10.639875-6.443924 26.011695 4.194951 34.334597 10.639875 8.321902 26.011695 6.443924 34.333597-4.195951 62.229271-79.554068 72.126155-213.142502 27.527678-320.936239z",
                Title = "热门推荐",
                ContentElement = new HotAndRecommandPage()
            });

            _tabbarItemList.Add(new TabbarItem()
            {
                Index = 3,
                PathData = "M225.28 348.16 225.28 368.64 798.72 368.64 798.72 348.16 225.28 348.16ZM276.48 163.84C259.513815 163.84 245.76 177.693958 245.76 194.691023L245.76 348.16 307.2 348.16 307.2 194.691023C307.2 177.652474 293.564477 163.84 276.48 163.84ZM358.4 163.84C341.433815 163.84 327.68 177.693958 327.68 194.691023L327.68 348.16 389.12 348.16 389.12 194.691023C389.12 177.652474 375.484477 163.84 358.4 163.84ZM665.6 450.56C648.633815 450.56 634.88 464.413958 634.88 481.411023L634.88 634.88 696.32 634.88 696.32 481.411023C696.32 464.372474 682.684477 450.56 665.6 450.56ZM747.52 450.56C730.553815 450.56 716.8 464.413958 716.8 481.411023L716.8 634.88 778.24 634.88 778.24 481.411023C778.24 464.372474 764.604477 450.56 747.52 450.56ZM583.68 450.56C566.713815 450.56 552.96 464.413958 552.96 481.411023L552.96 634.88 614.4 634.88 614.4 481.411023C614.4 464.372474 600.764477 450.56 583.68 450.56ZM358.4 737.28C341.433815 737.28 327.68 751.133958 327.68 768.131023L327.68 921.6 389.12 921.6 389.12 768.131023C389.12 751.092474 375.484477 737.28 358.4 737.28ZM440.32 737.28C423.353815 737.28 409.6 751.133958 409.6 768.131023L409.6 921.6 471.04 921.6 471.04 768.131023C471.04 751.092474 457.404477 737.28 440.32 737.28ZM487.256719 755.837751C473.706926 766.048258 471.060173 785.389771 481.289257 798.964232L573.649183 921.530006 622.717358 884.554492 530.357412 761.988717C520.103363 748.381127 500.900987 745.556058 487.256719 755.837751ZM276.48 737.28C259.513815 737.28 245.76 751.133958 245.76 768.131023L245.76 921.6 307.2 921.6 307.2 768.131023C307.2 751.092474 293.564477 737.28 276.48 737.28ZM757.76 317.44C757.76 300.473813 743.906038 286.72 726.908969 286.72L573.44 286.72 573.44 348.16 726.908969 348.16C743.94753 348.16 757.76 334.524473 757.76 317.44ZM225.28 81.92 225.28 102.4 798.72 102.4 798.72 81.92 225.28 81.92ZM225.28 634.88 225.28 655.36 798.72 655.36 798.72 634.88 225.28 634.88ZM225.28 921.6 225.28 942.08 798.72 942.08 798.72 921.6 225.28 921.6ZM204.8 0C193.489203 0 184.32 9.165327 184.32 20.454788L184.32 1003.545211C184.32 1014.842079 193.410355 1024 204.8 1024L204.8 1024C216.110797 1024 225.28 1014.834674 225.28 1003.545211L225.28 20.454788C225.28 9.157921 216.189645 0 204.8 0L204.8 0ZM819.2 0C807.889203 0 798.72 9.165327 798.72 20.454788L798.72 1003.545211C798.72 1014.842079 807.810355 1024 819.2 1024L819.2 1024C830.510797 1024 839.68 1014.834674 839.68 1003.545211L839.68 20.454788C839.68 9.157921 830.589645 0 819.2 0L819.2 0Z",
                Title = "本地书架",
                ContentElement = new LocalBookShelf()

            });

            _tabbarItemList.Add(new TabbarItem()
            {
                Index = 4,
                Title = "设置",
                PathData = "M985.93792 722.74432l-0.43008-20.0704-19.75808-3.456c-0.39936-0.0768-39.9872-7.30112-58.14784-36.29568-10.82368-17.28512-12.2624-40.15616-4.29568-67.96288l5.35552-18.69824-92.38528-50.18624-12.81024 13.76768c-0.31232 0.3328-32.14336 33.42848-69.35552 33.42848-19.85024 0.00512-38.05696-9.36448-55.6544-28.64128l-12.87168-14.10048-57.93792 31.8976c-24.3456-18.64192-49.87392-33.65376-76.22144-44.9536 75.84768-42.70592 127.22688-123.9552 127.22688-217.01632 0-137.25696-111.6672-248.91392-248.91904-248.91392S160.8192 163.2 160.8192 300.45184c0 93.73696 52.10624 175.50848 128.85504 217.9584-52.43904 22.87616-101.23776 60.39552-143.09888 111.01184-68.06016 82.28864-107.08992 186.89024-107.08992 286.96064a30.50496 30.50496 0 0 0 30.51008 30.51008h509.07136l-1.19808 4.43904 79.8464 41.19552 18.60096 9.43104 12.2368-16.8704c0.23552-0.32768 24.0896-32.64512 59.1104-32.64512 19.90144 0 41.02656 10.30144 62.76608 30.61248l13.46048 12.57984 74.58816-45.53216 16.86016-10.4448-6.74816-18.63168c-0.13824-0.36864-13.10208-37.03808 2.64704-67.55328 9.73312-18.87744 29.24544-32.49152 57.97376-40.4736l18.04288-5.00736-1.31584-85.248zM221.83936 300.45696c0-103.60832 84.29056-187.89888 187.89888-187.89888s187.89888 84.29056 187.89888 187.89888-84.29056 187.89376-187.89888 187.89376-187.89888-84.29056-187.89888-187.89376z m189.89568 252.96384c57.1648 0 113.4592 21.25312 164.06016 61.58848 3.80928 11.29472 9.18528 33.88416 0.0768 54.03648-8.31488 18.39616-27.74528 32.0512-57.76384 40.57088l-17.84832 5.0688 0.2304 18.55488s0.75264 61.1584 0.8704 71.88992l-3.22048 25.63584h26.4448c4.69504 0.4864 36.82816 4.61312 53.25312 27.76576 5.35552 7.552 8.5504 16.7424 9.82528 27.33568H101.7344c15.55456-189.45024 173.31712-332.44672 310.00064-332.44672z m456.1152 278.36928c-16.25088 31.9232-13.952 65.63328-9.984 86.30272l-28.48256 17.39776c-26.62912-20.93056-54.05696-31.52384-81.73056-31.52384-39.08608 0-68.22912 21.26848-84.35712 36.8896l-29.16864-15.0528c7.05024-39.6544 0.72192-72.63744-18.89792-98.26816-19.03616-24.86272-46.1824-36.1216-65.60256-41.18528l-0.43008-35.97824c34.85696-13.3376 58.73664-34.0992 71.10144-61.88032 13.22496-29.7216 9.41568-60.13952 4.14208-79.9488l32.04096-17.6384c23.47008 20.50048 49.51552 30.86336 77.63968 30.85824 39.6544 0 72.74496-21.40672 90.60352-35.9168l27.4688 14.91456c-6.05696 33.77152-1.1776 63.4112 14.58176 88.32512 19.34848 30.58176 50.56 45.64992 70.9376 52.60288l0.46592 30.50496c-32.97792 12.63104-56.59648 32.62464-70.32832 59.5968z m-125.19936-168.27904c-18.3808 0-36.4288 5.07904-52.18304 14.69952a99.65056 99.65056 0 0 0-45.21984 62.01856 99.6096 99.6096 0 0 0 11.88352 75.83232c18.36544 30.08 50.39616 48.04608 85.67808 48.04608 18.3808 0 36.4288-5.07904 52.18304-14.69952 47.19104-28.81536 62.15168-90.65984 33.33632-137.86112-18.37568-30.08512-50.39616-48.03584-85.67808-48.03584z m30.67392 150.42048a58.5728 58.5728 0 0 1-30.5152 8.61184c-20.67456 0-39.43936-10.51648-50.2016-28.13952a58.33216 58.33216 0 0 1-6.95808-44.39552 58.33728 58.33728 0 0 1 26.48064-36.31616 58.5728 58.5728 0 0 1 30.5152-8.61184c20.67456 0 39.43424 10.51648 50.19136 28.1344 16.88064 27.63264 8.12544 63.84128-19.51232 80.7168z",
                ContentElement = new SettingPage()
            });
        }

        public async void SwitchTab(int index)
        {
            var item = TabbarItemList[index];

            if (index == CurrentIndex && CurrentContent != null)
            {
                ToTopOrBottom(item.ContentElement as BaseListUserControl);
                return;
            }
            CurrentIndex = index;
            foreach (var temp in TabbarItemList)
            {
                temp.IsSelected = temp.Index == index;
            }
            CurrentContent = item.ContentElement;

            (item.ContentElement.DataContext as BasePageViewModel)?.LoadData();

            if (index == 4 && !IsLogin && !_hasShow)
            {
                _hasShow = true;
                await Task.Delay(500);
                NavigationService.NavigateTo(typeof(LoginPage));
            }
        }

        public void SetLoginAction(bool value)
        {
            IsLogin = value;

            if (value)
            {
                ViewModelInstance.Instance.OnLineBookShelf.LoadData();
            }
            else
            {
                ViewModelInstance.Instance.OnLineBookShelf.ResetData();
            }
        }


        private void CheckLogin()
        {
            var filter = new HttpBaseProtocolFilter();
            var cookieCollection = filter.CookieManager.GetCookies(new Uri(SoduPageValue.HomePage));
            var cookieItem = cookieCollection.FirstOrDefault(p => p.Name.Equals("sodu_user"));
            IsLogin = cookieItem != null;
        }

        private void ToTopOrBottom(BaseListUserControl control)
        {
            control?.GoTopOrBottom();
        }
        #endregion
    }
}
